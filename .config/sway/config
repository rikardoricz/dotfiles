### SWAY CONFIG ###

xwayland enable
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec_always nm-applet --indicator
exec gammastep
exec --no-startup-id systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec --no-startup-id dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
# exec /home/rikardo/.config/scripts/launchsway
for_window [app_id="flameshot"] floating enable, fullscreen disable, move absolute position 0 0, border pixel 0

### Style
font pango: JetBrainsMono Nerd Font Medium 12
gaps inner 10
default_border pixel 3
default_floating_border pixel 3
#titlebar_border_thickness 
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show run


### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $HOME/Pictures/Wallpapers/macos_nord_day.png fill
#
# Example configuration:
#
#output eDP-1 resolution 1920x1080@60hz position 0,0
#output HDMI-A-2 resolution 1920x1080@60hz position -1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
#exec swayidle -w \
#          timeout 1 'swaylock -f' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'

#exec swayidle -w \
#    timeout 60 'swaylock -f' \
#    timeout 90 'swaymsg "output * dpms off"' \
#        resume  'swaymsg "output * dpms on"'  \
#    timeout 626 'systemctl suspend ' \
#    before-sleep 'player-ctl pause' \
#    before-sleep 'swaylock -f'

#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#
### Input configuration
#

input "type:keyboard" {
    xkb_layout pl,us
    xkb_options grp:alt_space_toggle
    xkb_options caps:swapescape
}
input "type:touchpad" {
    tap enabled
}

#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#

    # Kill focused window
    bindsym $mod+q kill


    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# Assign workspace to monitor
    # workspace 1 output eDP-1
    workspace 1 output HDMI-A-2
    workspace 2 output HDMI-A-2
    workspace 3 output HDMI-A-2
    workspace 4 output eDP-1
    workspace 5 output eDP-1

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+Shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Tab floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+Tab focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 20px
    bindsym $down resize grow height 20px
    bindsym $up resize shrink height 20px
    bindsym $right resize grow width 20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 20px
    bindsym Down resize grow height 20px
    bindsym Up resize shrink height 20px
    bindsym Right resize grow width 20px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"
bindsym $mod+y exec playerctl pause

#
# Exit mode - powermenu
#
#
set $exit "‚èª exit: [p]oweroff, [r]eboot, [l]ock, l[o]gout"
mode $exit {
    bindsym --to-code {
        p exec systemctl poweroff
        r exec systemctl reboot
        o exec swaymsg exit
        l exec playerctl pause & swaylock, mode "default"
        #s exec systemctl suspend, mode "default" # suspend requires password authentication :/
    
        Return mode "default"
        Escape mode "default"
        $mod+x mode "default"
    }
}

bindsym --to-code $mod+x mode $exit


#
# Media keybindings - audio, brightness
#
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Search exec bemenu-run

#
# Assign apps to workspaces
#
assign [class="discord"] 5
assign [class="Caprine"] 5
assign [class="Spotify"] 4

#
# App floating
#

for_window [app_id="thunar"] floating enable

#
# Shortcuts
#
bindsym $mod+Return exec $term
bindsym $mod+d exec $menu
bindsym $mod+w exec firefox 
bindsym $mod+f exec thunar
bindsym $mod+Print exec grimshot --notify save screen
bindsym $mod+Shift+Print exec grimshot --notify save area

#
# Autostart
#
exec_always $HOME/.config/gtk-3.0/import-gsettings

#
# Colors
#
set $green "#98C379"
set $red "be5046"
set $black "#282C34"
set $fontLight "abb2bf"
set $fontDark "282c34"
set $darkGrey "4b5263"
# class                 border      back       text        indicator
client.focused          $green      $green     $black         $green
client.focused_inactive $darkGrey   $darkGrey  $fontLight     $black
client.unfocused        $darkGrey   $darkGrey  $fontLight     $black
client.urgent           $red        $black     $fontLight     $black
client.placeholder      $black      $black     $fontLight     $black

#
# Status Bar:
#
bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*
